MySQL SQL Queries
│
├── SELECT Queries
│   │
│   ├── Basic SELECT
│   │   SELECT [ALL | DISTINCT | DISTINCTROW]
│   │       [HIGH_PRIORITY]
│   │       [STRAIGHT_JOIN]
│   │       [SQL_SMALL_RESULT | SQL_BIG_RESULT]
│   │       [SQL_BUFFER_RESULT]
│   │       [SQL_CACHE | SQL_NO_CACHE]
│   │       [SQL_CALC_FOUND_ROWS]
│   │       field1, field2, ... | *
│   │   FROM table_name
│   │   [PARTITION (partition_names)]
│   │
│   ├── WHERE Clause
│   │   WHERE [condition]
│   │   │   ├── Comparison (=, <>, >, <, >=, <=)
│   │   │   ├── [NOT] BETWEEN value1 AND value2
│   │   │   ├── [NOT] IN (value1, value2, ... | subquery)
│   │   │   ├── [NOT] LIKE 'pattern' [ESCAPE 'escape_char']
│   │   │   ├── [NOT] REGEXP 'pattern'
│   │   │   ├── IS [NOT] NULL
│   │   │   ├── IS [NOT] TRUE | FALSE | UNKNOWN
│   │   │   └── [NOT] EXISTS (subquery)
│   │
│   ├── JOIN Operations
│   │   FROM table1
│   │   ├── INNER JOIN table2 ON condition
│   │   ├── LEFT [OUTER] JOIN table2 ON condition
│   │   ├── RIGHT [OUTER] JOIN table2 ON condition
│   │   ├── CROSS JOIN table2
│   │   ├── NATURAL [LEFT|RIGHT] JOIN table2
│   │   └── STRAIGHT_JOIN table2 (forces join order)
│   │
│   ├── GROUP BY
│   │   GROUP BY 
│   │       field1, field2, ...
│   │       [WITH ROLLUP]
│   │   [HAVING group_condition]
│   │
│   ├── Window Functions (MySQL 8.0+)
│   │   SELECT 
│   │       field1,
│   │       window_function() OVER (
│   │           [PARTITION BY field1, field2, ...]
│   │           [ORDER BY field1 [ASC|DESC], ...]
│   │           [frame_clause]
│   │       ) AS alias
│   │   FROM ...
│   │
│   └── Final Clauses
│       [ORDER BY field1 [ASC|DESC], ...]
│       [LIMIT [offset,] row_count | row_count OFFSET offset]
│       [FOR UPDATE | LOCK IN SHARE MODE]
│
├── INSERT Queries
│   │
│   ├── Basic INSERT
│   │   INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]
│   │   [INTO] table_name [(column1, column2, ...)]
│   │   VALUES (value1, value2, ...), (...), ...
│   │   [ON DUPLICATE KEY UPDATE 
│   │       column1 = value1, 
│   │       column2 = value2, ...]
│   │
│   └── INSERT...SELECT
│       INSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]
│       [INTO] table_name [(column1, column2, ...)]
│       SELECT ... [FROM ...] [WHERE ...]
│       [ON DUPLICATE KEY UPDATE ...]
│
├── UPDATE Queries
│   │
│   ├── Single-table UPDATE
│   │   UPDATE [LOW_PRIORITY] [IGNORE] table_name
│   │   SET column1 = value1, column2 = value2, ...
│   │   [WHERE condition]
│   │   [ORDER BY ...]
│   │   [LIMIT row_count]
│   │
│   └── Multi-table UPDATE
│       UPDATE [LOW_PRIORITY] [IGNORE] table1, table2, ...
│       SET table1.column1 = expr1, table2.column2 = expr2, ...
│       [WHERE conditions]
│
├── DELETE Queries
│   │
│   ├── Single-table DELETE
│   │   DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM table_name
│   │   [WHERE condition]
│   │   [ORDER BY ...]
│   │   [LIMIT row_count]
│   │
│   └── Multi-table DELETE
│       DELETE [LOW_PRIORITY] [QUICK] [IGNORE] 
│       table1[.*], table2[.*], ...
│       FROM table1, table2, ...
│       [WHERE conditions]
│       [ORDER BY ...]
│       [LIMIT row_count]
│
└── Subqueries
    │
    ├── Scalar Subquery
    │   SELECT (SELECT MAX(score) FROM tests) AS max_score
    │   FROM students
    │
    ├── IN Subquery
    │   SELECT * FROM products
    │   WHERE category_id IN (SELECT id FROM categories WHERE active = 1)
    │
    ├── EXISTS Subquery
    │   SELECT * FROM orders
    │   WHERE EXISTS (SELECT 1 FROM customers 
    │                WHERE customers.id = orders.customer_id
    │                AND country = 'USA')
    │
    ├── Derived Tables
    │   SELECT * FROM 
    │   (SELECT dept_id, AVG(salary) AS avg_sal 
    │    FROM employees GROUP BY dept_id) AS dept_avg
    │
    └── Correlated Subquery
        SELECT e.name, e.salary,
               (SELECT AVG(salary) 
                FROM employees 
                WHERE dept_id = e.dept_id) AS dept_avg
        FROM employees e
