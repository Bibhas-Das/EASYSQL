SELECT [field1] FROM [table];
SELECT [field1], [field2] FROM [table];  
SELECT [field1], [field2] FROM [table] WHERE [field1] = [value];  
SELECT [field1], [field2] FROM [table] WHERE [field1] <> [value];  
SELECT [field1], [field2] FROM [table] WHERE [field1] < [value];  
SELECT [field1], [field2] FROM [table] WHERE [field1] > [value];  
SELECT [field1], [field2] FROM [table] WHERE [field1] <= [value];  
SELECT [field1], [field2] FROM [table] WHERE [field1] >= [value];  
SELECT [field1], [field2] FROM [table] WHERE [field1] BETWEEN [value1] AND [value2];  
SELECT [field1], [field2] FROM [table] WHERE [field1] IN ([value1], [value2]);  
SELECT [field1], [field2] FROM [table] WHERE [field1] LIKE '[pattern]';  
SELECT [field1], [field2] FROM [table] WHERE [field1] IS NULL;  
SELECT [field1], [field2] FROM [table] WHERE [field1] IS NOT NULL;  
SELECT [field1], [field2] FROM [table] ORDER BY [field1] ASC;
SELECT [field1], [field2] FROM [table] ORDER BY [field1] DESC;  
SELECT [field1], [field2] FROM [table] LIMIT [number];
SELECT [field1], [field2] FROM [table] OFFSET [number];  
SELECT DISTINCT [field1] FROM [table];  
SELECT COUNT([field1]) FROM [table];  
SELECT SUM([field1]) FROM [table];  
SELECT AVG([field1]) FROM [table]; 
SELECT MIN([field1]) FROM [table];  
SELECT MAX([field1]) FROM [table];  
SELECT [field1], COUNT([field2]) FROM [table] GROUP BY [field1];  
SELECT [field1], COUNT([field2]) FROM [table] GROUP BY [field1] HAVING COUNT([field2]) > [value];  
SELECT [table1].[field], [table2].[field] FROM [table1] INNER JOIN [table2] ON [table1].[id] = [table2].[id];  
SELECT [table1].[field], [table2].[field] FROM [table1] LEFT JOIN [table2] ON [table1].[id] = [table2].[id];  
SELECT [table1].[field], [table2].[field] FROM [table1] RIGHT JOIN [table2] ON [table1].[id] = [table2].[id];  
SELECT [table1].[field], [table2].[field] FROM [table1] FULL OUTER JOIN [table2] ON [table1].[id] = [table2].[id];  
SELECT [field1] FROM [table1] UNION SELECT [field1] FROM [table2];  
SELECT [field1] FROM [table1] UNION ALL SELECT [field1] FROM [table2];  
SELECT [field1] FROM [table1] INTERSECT SELECT [field1] FROM [table2];  
SELECT [field1] FROM [table1] EXCEPT SELECT [field1] FROM [table2];  
SELECT * FROM [table] WHERE [field1] = (SELECT [field1] FROM [table2] WHERE [condition]);  
SELECT [field1], [field2], CASE WHEN [condition] THEN [result] ELSE [result] END FROM [table];  

INSERT INTO [table] ([field1], [field2]) VALUES ([value1], [value2]);  
INSERT INTO [table] VALUES ([value1], [value2]);  
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [table2];  


INSERT INTO [table1] ([field1], [field2]) SELECT [fieldA], [fieldB] FROM [table2] WHERE [fieldC] = [value];  
INSERT INTO [table1] SELECT * FROM [table2] WHERE [field1] IN (SELECT [field2] FROM [table3]);  
INSERT INTO [table1] ([field1]) SELECT [field2] FROM [table2] JOIN [table3] ON [table2].[id] = [table3].[id] WHERE [field3] > [value];  
INSERT INTO [table1] SELECT [field1] FROM [table2] GROUP BY [field1] HAVING SUM([field2]) < [value];  
INSERT INTO [table1] ([field1], [field2]) SELECT [fieldA], AVG([fieldB]) FROM [table2] WHERE [fieldC] LIKE '[pattern]' GROUP BY [fieldA];  
INSERT INTO [table1] SELECT [field1] FROM [table2] WHERE EXISTS (SELECT 1 FROM [table3] WHERE [table2].[id] = [table3].[id]);  
INSERT INTO [table1] ([field1]) SELECT [field2] FROM [table2] ORDER BY [field3] DESC LIMIT [number];  
INSERT INTO [table1] SELECT [field1] FROM [table2] LEFT JOIN [table3] ON [table2].[id] = [table3].[id] WHERE [field4] IS NULL;  
INSERT INTO [table1] ([field1], [field2]) SELECT [fieldA], MAX([fieldB]) FROM [table2] WHERE [fieldC] BETWEEN [value1] AND [value2] GROUP BY [fieldA];  
INSERT INTO [table1] SELECT [field1] FROM [table2] WHERE [field2] = [value] AND [field3] <> (SELECT MIN([field4]) FROM [table3]);  
INSERT INTO [table1] ([field1]) SELECT DISTINCT [field2] FROM [table2] CROSS JOIN [table3] WHERE [table2].[id] = [table3].[id];  
INSERT INTO [table1] SELECT [field1] FROM [table2] WHERE [field2] > ALL (SELECT [field3] FROM [table3] WHERE [field4] = [value]);  
INSERT INTO [table1] ([field1], [field2]) SELECT [fieldA], [fieldB] FROM [table2] UNION SELECT [fieldC], [fieldD] FROM [table3];  
INSERT INTO [table1] SELECT [field1] FROM [table2] WHERE [field2] IN (SELECT [field3] FROM [table3] GROUP BY [field3] HAVING COUNT(*) > [value]);  
INSERT INTO [table1] ([field1]) SELECT [field2] FROM [table2] FULL OUTER JOIN [table3] ON [table2].[id] = [table3].[id] WHERE [field4] IS NOT NULL;  
INSERT INTO [table1] SELECT [field1] FROM [table2] WHERE [field2] = (SELECT [field3] FROM [table3] ORDER BY [field4] LIMIT 1);  
INSERT INTO [table1] ([field1], [field2]) SELECT [fieldA], COALESCE([fieldB], [default]) FROM [table2] WHERE [fieldC] < [value];  
INSERT INTO [table1] SELECT [field1] FROM [table2] NATURAL JOIN [table3] WHERE [field2] LIKE '[pattern]' ORDER BY [field3] OFFSET [number];  
INSERT INTO [table1] ([field1]) SELECT CONCAT([fieldA], [fieldB]) FROM [table2] WHERE [fieldC] IN (SELECT [fieldD] FROM [table3]);  
INSERT INTO [table1] SELECT [field1] FROM [table2] WHERE [field2] = [value] OR [field3] IN (SELECT [field4] FROM [table3] WHERE [field5] > [value]);



DELETE FROM [table] WHERE [condition];  
DELETE FROM [table];  

CREATE TABLE [table] ([field1] [datatype], [field2] [datatype]);  
CREATE TABLE [table] AS SELECT [field1], [field2] FROM [existing_table];  
CREATE INDEX [index_name] ON [table] ([field1]);  
CREATE VIEW [view_name] AS SELECT [field1], [field2] FROM [table];  

ALTER TABLE [table] ADD [column] [datatype];  
ALTER TABLE [table] DROP COLUMN [column];  
ALTER TABLE [table] MODIFY COLUMN [column] [new_datatype];  
ALTER TABLE [table] ADD CONSTRAINT [constraint_name] PRIMARY KEY ([field]);  
ALTER TABLE [table] ADD CONSTRAINT [constraint_name] FOREIGN KEY ([field]) REFERENCES [table2]([field]);  
ALTER TABLE [table] RENAME TO [new_table_name];  
ALTER TABLE [table] RENAME COLUMN [old_name] TO [new_name];  

DROP TABLE [table];  
DROP INDEX [index_name];  
DROP VIEW [view_name];  

TRUNCATE TABLE [table];  

SELECT * FROM [table1] CROSS JOIN [table2];  
SELECT * FROM [table1] SELF JOIN [table1] [alias] ON [table1].[id] = [alias].[id];  

BEGIN TRANSACTION;  
COMMIT;  
ROLLBACK;  
SAVEPOINT [savepoint_name];  
ROLLBACK TO [savepoint_name];  

CREATE TABLE [table] ([field] [datatype] UNIQUE);  
CREATE TABLE [table] ([field] [datatype] CHECK ([field] > [value]));  
CREATE TABLE [table] ([field] [datatype] DEFAULT [default_value]);  

SELECT [field1], ROW_NUMBER() OVER (PARTITION BY [field2] ORDER BY [field3]) FROM [table];  
SELECT [field1], RANK() OVER (ORDER BY [field2]) FROM [table];  

GRANT SELECT ON [table] TO [user];  
REVOKE DELETE ON [table] FROM [user];  

SELECT COALESCE([field1], [default_value]) FROM [table];  
SELECT NULLIF([field1], [value]) FROM [table];  
SELECT CONCAT([field1], [field2]) FROM [table];  

SELECT [field1] FROM [table] WHERE EXISTS (SELECT 1 FROM [table2] WHERE [condition]);  
SELECT [field1] FROM [table] WHERE [field2] IN (SELECT [field] FROM [table2]);  

SELECT [field1] ->> '$.key' FROM [table];  
UPDATE [table] SET [json_field] = JSON_SET([json_field], '$.key', [value]);

SELECT [field1], [field2] FROM [table];
SELECT * FROM [table];
SELECT DISTINCT [field1] FROM [table];
SELECT [field1] AS [alias] FROM [table]; 

  
SELECT SUM([field1]) FROM [table];  
SELECT AVG([field1]) FROM [table];  
SELECT COUNT([field1]) FROM [table]; 
SELECT COUNT(DISTINCT [field1]) FROM [table];
SELECT MAX([field1]) FROM [table];  
SELECT MIN([field1]) FROM [table];
SELECT STDDEV([field1]) FROM [table];  
SELECT VARIANCE([field1]) FROM [table];  
SELECT GROUP_CONCAT([field1]) FROM [table];  
SELECT SUM([field1] + [field2]) FROM [table];  
SELECT AVG([field1] * [field2]) FROM [table];  

  
SELECT SQRT([field1]) FROM [table];  
SELECT POWER([field1], [exponent]) FROM [table];  
SELECT ABS([field1]) FROM [table];  
SELECT ROUND([field1], [decimal]) FROM [table];  
SELECT CEIL([field1]) FROM [table];  
SELECT FLOOR([field1]) FROM [table];  
SELECT LOG([field1]) FROM [table];  
SELECT MOD([field1], [divisor]) FROM [table];  
  
SELECT [field1], SUM([field2]) FROM [table] GROUP BY [field1];  
SELECT [field1], AVG([field2]) FROM [table] GROUP BY [field1] HAVING AVG([field2]) > [value];  
SELECT [field1], COUNT(*) FROM [table] GROUP BY [field1] HAVING COUNT(*) > [value];  
  
SELECT * FROM [table] WHERE [field1] = [value];  
SELECT * FROM [table] WHERE [field1] BETWEEN [value1] AND [value2];  
SELECT * FROM [table] WHERE [field1] IN ([value1], [value2]);  
SELECT * FROM [table] WHERE [field1] LIKE '[pattern]';  
SELECT * FROM [table] WHERE [field1] IS NULL;  
SELECT * FROM [table] WHERE [field1] > (SELECT AVG([field1]) FROM [table]);  

SELECT * FROM [table1] WHERE [field1] IN (SELECT [field1] FROM [table2] WHERE [condition]);  
SELECT [field1], (SELECT MAX([field2]) FROM [table2]) FROM [table1];  
SELECT * FROM (SELECT [field1] FROM [table1]) AS [alias];  
SELECT * FROM [table1] WHERE EXISTS (SELECT 1 FROM [table2] WHERE [table1].[id] = [table2].[id]);  
SELECT * FROM [table1] WHERE [field1] > ALL (SELECT [field1] FROM [table2]);  
SELECT * FROM [table1] WHERE [field1] > ANY (SELECT [field1] FROM [table2]);  

  
SELECT * FROM [table1] INNER JOIN [table2] ON [table1].[id] = [table2].[id];  
SELECT * FROM [table1] LEFT JOIN [table2] ON [table1].[id] = [table2].[id];  
SELECT * FROM [table1] RIGHT JOIN [table2] ON [table1].[id] = [table2].[id];  
SELECT * FROM [table1] FULL OUTER JOIN [table2] ON [table1].[id] = [table2].[id];  
SELECT * FROM [table1] CROSS JOIN [table2];  
SELECT * FROM [table1] NATURAL JOIN [table2];  

  
SELECT [field1] FROM [table1] UNION SELECT [field1] FROM [table2];  
SELECT [field1] FROM [table1] INTERSECT SELECT [field1] FROM [table2];  

  
SELECT [field1], ROW_NUMBER() OVER (ORDER BY [field2]) FROM [table];  
SELECT [field1], RANK() OVER (PARTITION BY [field2] ORDER BY [field3]) FROM [table];  
SELECT [field1], SUM([field2]) OVER (PARTITION BY [field3]) FROM [table];  
SELECT [field1], LAG([field2], 1) OVER (ORDER BY [field3]) FROM [table];  
SELECT [field1], LEAD([field2], 1) OVER (ORDER BY [field3]) FROM [table];  

  
SELECT CURRENT_DATE;  
SELECT EXTRACT(YEAR FROM [date_field]) FROM [table];  
SELECT DATE_ADD([date_field], INTERVAL [number] DAY) FROM [table];  
SELECT DATEDIFF([date1], [date2]) FROM [table];  

  
SELECT CONCAT([field1], [field2]) FROM [table];  
SELECT SUBSTRING([field1], [start], [length]) FROM [table];  
SELECT UPPER([field1]) FROM [table];  
SELECT LOWER([field1]) FROM [table];  
SELECT TRIM([field1]) FROM [table];  
SELECT LENGTH([field1]) FROM [table];  

  
SELECT CASE WHEN [field1] > [value] THEN 'High' ELSE 'Low' END FROM [table];  
SELECT SUM(CASE WHEN [field1] > [value] THEN 1 ELSE 0 END) FROM [table];  

  
WITH [cte] AS (SELECT [field1] FROM [table]) SELECT * FROM [cte];  
WITH RECURSIVE [cte] AS (...) SELECT * FROM [cte];  



  
INSERT INTO [table] ([field1], [field2]) VALUES ([value1], [value2]);  
INSERT INTO [table] VALUES ([value1], [value2], ...);  
INSERT INTO [table1] SELECT [field1], [field2] FROM [table2];  



  
UPDATE [table] SET [field1] = [value1] WHERE [condition];  
UPDATE [table] SET [field1] = (SELECT [field2] FROM [table2] WHERE [condition]);  
UPDATE [table1], [table2] SET [table1].[field] = [table2].[field] WHERE [table1].[id] = [table2].[id];  



  
DELETE FROM [table] WHERE [condition];  
DELETE FROM [table] WHERE [field1] IN (SELECT [field1] FROM [table2]);  
DELETE FROM [table1], [table2] USING [table1] JOIN [table2] ON [condition] WHERE [criteria];  

  
CREATE TABLE [table] ([field1] INT, [field2] VARCHAR(255));  
CREATE TABLE [table] AS SELECT [field1], [field2] FROM [existing_table];  
CREATE INDEX [index_name] ON [table] ([field1]);  
CREATE VIEW [view_name] AS SELECT [field1], [field2] FROM [table];  
CREATE DATABASE [database_name];  


ALTER TABLE [table] ADD COLUMN [field] [datatype];  
ALTER TABLE [table] DROP COLUMN [field];
ALTER TABLE [table] MODIFY COLUMN [field] [new_datatype];  
ALTER TABLE [table] ADD PRIMARY KEY ([field]);
ALTER TABLE [table] ADD FOREIGN KEY ([field]) REFERENCES [table2]([field]);
ALTER TABLE [table] RENAME TO [new_name];

DROP TABLE [table];  
DROP INDEX [index_name];  
DROP VIEW [view_name];  
TRUNCATE TABLE [table];
  
BEGIN TRANSACTION;
COMMIT;  
ROLLBACK;
SAVEPOINT [savepoint_name];

CREATE TABLE [table] ([field] INT UNIQUE); 
CREATE TABLE [table] ([field] INT CHECK ([field] > [value]));  
CREATE TABLE [table] ([field] INT DEFAULT [value]);  

GRANT SELECT, INSERT ON [table] TO [user];  
REVOKE DELETE ON [table] FROM [user];  

SELECT COALESCE([field1], [default]) FROM [table];
SELECT NULLIF([field1], [value]) FROM [table];
SELECT CAST([field1] AS DATE) FROM [table];

SELECT [json_field] ->> '$.key' FROM [table];
SELECT XMLQUERY('//node' PASSING [xml_field]) FROM [table];

SELECT * FROM [table] LIMIT [number] OFFSET [number];  

EXECUTE IMMEDIATE 'SELECT * FROM [table]';
  
MERGE INTO [table1] USING [table2] ON [condition] WHEN MATCHED THEN UPDATE SET [field1] = [value] WHEN NOT MATCHED THEN INSERT ([field1]) VALUES ([value]);

SELECT * FROM [table] WHERE MATCH([field]) AGAINST ('[term]');
SELECT * FROM [table] START WITH [field] = [value] CONNECT BY PRIOR [id] = [parent_id];

SELECT * FROM [table] PARTITION ([partition_name]);  
 
SELECT SUM([field1]) FROM [table] WHERE [field2] IN (SELECT [field3] FROM [table2] WHERE [field4] = [value]);
SELECT [field1], AVG([field2]) FROM [table1] JOIN [table2] ON [table1].[id] = [table2].[id] GROUP BY [field1] HAVING AVG([field2]) > (SELECT MIN([field3]) FROM [table3]);











UPDATE [table] SET [field1] = [value1];
UPDATE [table] SET [field1] = [value1], [field2] = [value2];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] > [value3];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] BETWEEN [value3] AND [value4];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] IN ([value3], [value4], [value5]);
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] LIKE [%value%];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] IS NULL;
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE NOT [field3] = [value3];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] OR [field4] = [value4];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] IN (SELECT [field3] FROM [another_table] WHERE [field4] = [value4]);
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] LIMIT [10];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] ORDER BY [field4] DESC LIMIT [5];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] BETWEEN [value4] AND [value5];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] IN ([value4], [value5], [value6]);
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] LIKE [%value%];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] IS NULL;
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] IS NOT NULL;
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] <> [value4];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] > [value4] AND [field5] < [value5];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] OR [field4] = [value4] OR [field5] = [value5];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] <> [value5];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] BETWEEN [value5] AND [value6];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] IN ([value5], [value6], [value7]);
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] LIKE [%value%];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] IS NULL;
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] IS NOT NULL;
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] > [value5] AND [field6] < [value6];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] OR [field5] = [value5];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] OR [field5] = [value5] OR [field6] = [value6];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5] OR [field6] = [value6];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5] AND [field6] = [value6];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5] AND [field6] <> [value6];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5] AND [field6] BETWEEN [value6] AND [value7];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5] AND [field6] IN ([value6], [value7], [value8]);
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5] AND [field6] LIKE [%value%];
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5] AND [field6] IS NULL;
UPDATE [table] SET [field1] = [value1], [field2] = [value2] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5] AND [field6] IS NOT NULL;









DELETE FROM [table];
DELETE FROM [table] WHERE [field1] = [value1];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2];
DELETE FROM [table] WHERE [field1] = [value1] OR [field2] = [value2];
DELETE FROM [table] WHERE [field1] > [value1];
DELETE FROM [table] WHERE [field1] < [value1];
DELETE FROM [table] WHERE [field1] BETWEEN [value1] AND [value2];
DELETE FROM [table] WHERE [field1] IN ([value1], [value2], [value3]);
DELETE FROM [table] WHERE [field1] LIKE [%value%];
DELETE FROM [table] WHERE [field1] IS NULL;
DELETE FROM [table] WHERE [field1] IS NOT NULL;
DELETE FROM [table] WHERE NOT [field1] = [value1];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] > [value2];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] < [value2];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] BETWEEN [value2] AND [value3];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] IN ([value2], [value3], [value4]);
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] LIKE [%value%];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] IS NULL;
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] IS NOT NULL;
DELETE FROM [table] WHERE [field1] = [value1] OR [field2] = [value2] OR [field3] = [value3];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] <> [value3];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] BETWEEN [value3] AND [value4];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] IN ([value3], [value4], [value5]);
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] LIKE [%value%];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] IS NULL;
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] IS NOT NULL;
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] > [value3] AND [field4] < [value4];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] OR [field3] = [value3];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] OR [field3] = [value3] OR [field4] = [value4];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] OR [field4] = [value4];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] = [value4];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] <> [value4];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] BETWEEN [value4] AND [value5];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] IN ([value4], [value5], [value6]);
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] LIKE [%value%];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] IS NULL;
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] IS NOT NULL;
DELETE FROM [table] WHERE [field1] = [value1] LIMIT [10];
DELETE FROM [table] WHERE [field1] = [value1] ORDER BY [field2] DESC LIMIT [5];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] LIMIT [10];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] ORDER BY [field3] DESC LIMIT [5];
DELETE FROM [table] WHERE [field1] IN (SELECT [field1] FROM [another_table] WHERE [field2] = [value2]);
DELETE FROM [table] WHERE EXISTS (SELECT 1 FROM [another_table] WHERE [another_table].[field1] = [table].[field1]);
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] = [value4] AND [field5] <> [value5];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] = [value4] AND [field5] BETWEEN [value5] AND [value6];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] = [value4] AND [field5] IN ([value5], [value6], [value7]);
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] = [value4] AND [field5] LIKE [%value%];
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] = [value4] AND [field5] IS NULL;
DELETE FROM [table] WHERE [field1] = [value1] AND [field2] = [value2] AND [field3] = [value3] AND [field4] = [value4] AND [field5] IS NOT NULL;




INSERT INTO [table] ([field1], [field2]) VALUES ([value1], [value2]);
INSERT INTO [table] ([field1], [field2], [field3]) VALUES ([value1], [value2], [value3]);
INSERT INTO [table] ([field1], [field2], [field3], [field4]) VALUES ([value1], [value2], [value3], [value4]);
INSERT INTO [table] ([field1], [field2]) VALUES ([value1], [value2]), ([value3], [value4]);
INSERT INTO [table] ([field1], [field2], [field3]) VALUES ([value1], [value2], [value3]), ([value4], [value5], [value6]);
INSERT INTO [table] ([field1], [field2], [field3], [field4]) VALUES ([value1], [value2], [value3], [value4]), ([value5], [value6], [value7], [value8]);
INSERT INTO [table] ([field1]) VALUES ([value1]);
INSERT INTO [table] ([field1], [field2]) VALUES ([value1], DEFAULT);
INSERT INTO [table] ([field1], [field2]) VALUES (DEFAULT, [value2]);
INSERT INTO [table] ([field1], [field2]) VALUES ([value1], NULL);
INSERT INTO [table] ([field1], [field2]) VALUES (NULL, [value2]);
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] IN ([value3], [value4], [value5]);
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] LIKE [%value%];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] IS NULL;
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] IS NOT NULL;
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] BETWEEN [value3] AND [value4];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] > [value3];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] < [value3];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] = [value4];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] OR [field4] = [value4];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] > [value4];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] < [value4];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] BETWEEN [value4] AND [value5];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] IN ([value4], [value5], [value6]);
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] LIKE [%value%];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] IS NULL;
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] IS NOT NULL;
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] <> [value4];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] > [value4] AND [field5] < [value5];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] OR [field4] = [value4] OR [field5] = [value5];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] <> [value5];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] BETWEEN [value5] AND [value6];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] IN ([value5], [value6], [value7]);
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] LIKE [%value%];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] IS NULL;
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] IS NOT NULL;
INSERT INTO [table] ([field1], [field2]) VALUES ([value1], [value2]) ON DUPLICATE KEY UPDATE [field1] = [value1], [field2] = [value2];
INSERT INTO [table] ([field1], [field2]) VALUES ([value1], [value2]) ON DUPLICATE KEY UPDATE [field1] = VALUES([field1]), [field2] = VALUES([field2]);
INSERT INTO [table] ([field1], [field2]) VALUES ([value1], [value2]) ON CONFLICT ([field1]) DO UPDATE SET [field2] = [value2];
INSERT INTO [table] ([field1], [field2]) VALUES ([value1], [value2]) ON CONFLICT ([field1]) DO NOTHING;
INSERT INTO [table] ([field1], [field2]) VALUES ([value1], [value2]) RETURNING [field1], [field2];
INSERT INTO [table] ([field1], [field2]) VALUES ([value1], [value2]) RETURNING *;
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] RETURNING [field1], [field2];
INSERT INTO [table] ([field1], [field2]) SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3] RETURNING *;




SELECT [field1], [field2] FROM [table];
SELECT [field1], [field2], [field3] FROM [table];
SELECT * FROM [table];
SELECT [field1] FROM [table] WHERE [field2] = [value2];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3];
SELECT [field1], [field2] FROM [table] WHERE [field3] > [value3];
SELECT [field1], [field2] FROM [table] WHERE [field3] < [value3];
SELECT [field1], [field2] FROM [table] WHERE [field3] BETWEEN [value3] AND [value4];
SELECT [field1], [field2] FROM [table] WHERE [field3] IN ([value3], [value4], [value5]);
SELECT [field1], [field2] FROM [table] WHERE [field3] LIKE [%value%];
SELECT [field1], [field2] FROM [table] WHERE [field3] IS NULL;
SELECT [field1], [field2] FROM [table] WHERE [field3] IS NOT NULL;
SELECT [field1], [field2] FROM [table] WHERE NOT [field3] = [value3];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] = [value4];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] OR [field4] = [value4];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] > [value4];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] < [value4];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] BETWEEN [value4] AND [value5];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] IN ([value4], [value5], [value6]);
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] LIKE [%value%];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] IS NULL;
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] IS NOT NULL;
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] <> [value4];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] > [value4] AND [field5] < [value5];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] OR [field4] = [value4] OR [field5] = [value5];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] = [value5];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] <> [value5];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] BETWEEN [value5] AND [value6];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] IN ([value5], [value6], [value7]);
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] LIKE [%value%];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] IS NULL;
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] = [value4] AND [field5] IS NOT NULL;
SELECT [field1], [field2] FROM [table] ORDER BY [field3] ASC;
SELECT [field1], [field2] FROM [table] ORDER BY [field3] DESC;
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] ORDER BY [field4] ASC;
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] ORDER BY [field4] DESC;
SELECT [field1], [field2] FROM [table] LIMIT [10];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] LIMIT [10];
SELECT [field1], [field2] FROM [table] ORDER BY [field3] DESC LIMIT [5];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] ORDER BY [field4] DESC LIMIT [5];
SELECT [field1], [field2] FROM [table] GROUP BY [field3];
SELECT [field1], COUNT(*) FROM [table] GROUP BY [field1];
SELECT [field1], SUM([field2]) FROM [table] GROUP BY [field1];
SELECT [field1], AVG([field2]) FROM [table] GROUP BY [field1];
SELECT [field1], MAX([field2]) FROM [table] GROUP BY [field1];
SELECT [field1], MIN([field2]) FROM [table] GROUP BY [field1];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] GROUP BY [field1], [field2];
SELECT [field1], COUNT(*) FROM [table] WHERE [field3] = [value3] GROUP BY [field1];
SELECT [field1], SUM([field2]) FROM [table] WHERE [field3] = [value3] GROUP BY [field1];
SELECT [field1], AVG([field2]) FROM [table] WHERE [field3] = [value3] GROUP BY [field1];
SELECT [field1], MAX([field2]) FROM [table] WHERE [field3] = [value3] GROUP BY [field1];
SELECT [field1], MIN([field2]) FROM [table] WHERE [field3] = [value3] GROUP BY [field1];
SELECT [field1], [field2] FROM [table] HAVING COUNT(*) > [1];
SELECT [field1], [field2] FROM [table] GROUP BY [field1], [field2] HAVING COUNT(*) > [1];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] HAVING COUNT(*) > [1];
SELECT [field1], [field2] FROM [table] GROUP BY [field1], [field2] HAVING SUM([field3]) > [100];
SELECT [field1], [field2] FROM [table] GROUP BY [field1], [field2] HAVING AVG([field3]) > [50];
SELECT [field1], [field2] FROM [table] GROUP BY [field1], [field2] HAVING MAX([field3]) > [200];
SELECT [field1], [field2] FROM [table] GROUP BY [field1], [field2] HAVING MIN([field3]) < [10];
SELECT [field1], [field2] FROM [table] JOIN [another_table] ON [table].[field3] = [another_table].[field3];
SELECT [field1], [field2] FROM [table] INNER JOIN [another_table] ON [table].[field3] = [another_table].[field3];
SELECT [field1], [field2] FROM [table] LEFT JOIN [another_table] ON [table].[field3] = [another_table].[field3];
SELECT [field1], [field2] FROM [table] RIGHT JOIN [another_table] ON [table].[field3] = [another_table].[field3];
SELECT [field1], [field2] FROM [table] FULL OUTER JOIN [another_table] ON [table].[field3] = [another_table].[field3];
SELECT [field1], [field2] FROM [table] CROSS JOIN [another_table];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] UNION SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] UNION ALL SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] INTERSECT SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] EXCEPT SELECT [field1], [field2] FROM [another_table] WHERE [field3] = [value3];
SELECT [field1], [field2] FROM [table] WHERE [field3] = [value3] AND [field4] IN (SELECT [field4] FROM [another_table] WHERE [field5] = [value5]);
SELECT [field1], [field2] FROM [table] WHERE EXISTS (SELECT 1 FROM [another_table] WHERE [another_table].[field3] = [table].[field3]);
